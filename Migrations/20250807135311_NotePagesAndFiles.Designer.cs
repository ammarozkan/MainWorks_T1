// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WORKS_T1.Data;

#nullable disable

namespace WORKS_T1.Migrations
{
    [DbContext(typeof(WORKS_T1_Context))]
    [Migration("20250807135311_NotePagesAndFiles")]
    partial class NotePagesAndFiles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("WORKS_T1.Models.AgendaRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("endDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("notePageCode")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("startDate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AgendaRecord");
                });

            modelBuilder.Entity("WORKS_T1.Models.FileObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BelongingFolderCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("RealName")
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isFolder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FileObject");
                });

            modelBuilder.Entity("WORKS_T1.Models.NotePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NotePage");
                });

            modelBuilder.Entity("WORKS_T1.Models.NotePagePiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("NotePagePiece");
                });

            modelBuilder.Entity("WORKS_T1.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActiveAgendaRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("SeePermissions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("WritePermissions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("focusType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isOnGoing")
                        .HasColumnType("INTEGER");

                    b.Property<long>("lastAction")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
